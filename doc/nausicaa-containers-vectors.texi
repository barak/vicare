@node containers vectors
@section Extended vectors processing


@cindex Library @library{nausicaa containers vectors}
@cindex @library{nausicaa containers vectors}, library


The label @class{xvector} provides an interface to the functions in
@library{vicare containers vectors} through the facilities of the
language @library{nausicaa}.


@deftp Label @aclass{xvector}
Label interface to the vector functions.  It is derived from
@class{vector}.
@end deftp


All the following methods are implemented as syntaxes; in all the
descriptions: @var{self} is an identifier bound to the subject vector.

@c ------------------------------------------------------------

@macro XvectorMethod{NAME}
@defmethod @aclass{xvector} \NAME\ . @var{args}
Implement the expansion:

@example
(@var{self} \NAME\ . @var{args})
@expansion{} (vector-\NAME\ @var{self} . @var{args})
@end example
@end defmethod
@end macro

@macro XvectorMethodSubvector{NAME}
@defmethod @aclass{xvector} \NAME\ . @var{args}
Implement the expansion:

@example
(@var{self} \NAME\ . @var{args})
@expansion{} (\NAME\ @var{self} . @var{args})
@end example
@end defmethod
@end macro

@macro XvectorMethodCompare{NAME}
@defmethod @aclass{xvector} \NAME\ @var{item=} . @var{args}
Implement the expansion:

@example
(@var{self} \NAME\ @var{item=} . @var{args})
@expansion{} (vector\NAME\ @var{item=} @var{self} . @var{args})
@c                 *^*
@end example
@end defmethod
@end macro

@macro XvectorMethodMap{NAME}
@defmethod @aclass{xvector} \NAME\ @var{proc} . @var{args}
Implement the expansion:

@example
(@var{self} \NAME\ @var{proc} . @var{args})
@expansion{} (vector-\NAME\ @var{proc} @var{self} . @var{args})
@end example
@end defmethod
@end macro

@macro XvectorMethodFold{NAME}
@defmethod @aclass{xvector} \NAME\ @var{proc} @var{knil} . @var{args}
Implement the expansion:

@example
(@var{self} \NAME\ @var{proc} @var{knil} . @var{args})
@expansion{} (vector-\NAME\ @var{proc} @var{knil} @var{self} . @var{args})
@end example
@end defmethod
@end macro

@c ------------------------------------------------------------

@subsubheading Constructors

@defmethod @aclass{xvector} concatenate @var{list-of-vectors}
Implement the expansions:

@example
(@var{self} concatenate @var{list-of-vectors})
@expansion{} (vector-concatenate (cons @var{self} @var{list-of-vectors}))
@end example
@end defmethod


@defmethod @aclass{xvector} concatenate-reverse @var{list-of-vectors}
@defmethodx @aclass{xvector} concatenate-reverse @var{list-of-vectors} @var{final-vector}
@defmethodx @aclass{xvector} concatenate-reverse @var{list-of-vectors} @var{final-vector} @var{nvalues}
Implement the expansions:

@example
(@var{self} concatenate-reverse @var{list-of-vectors})
@expansion{} (vector-concatenate-reverse
     (cons @var{self} @var{list-of-vectors}))

(@var{self} concatenate-reverse @var{list-of-vectors}
                          @var{final-vector})
@expansion{} (vector-concatenate-reverse
     (cons @var{self} @var{list-of-vectors})
     @var{final-vector})

(@var{self} concatenate-reverse @var{list-of-vectors}
                          @var{final-vector} @var{nvalues})
@expansion{} (vector-concatenate-reverse
     (cons @var{self} @var{list-of-vectors})
     @var{final-vector} @var{nvalues})
@end example
@end defmethod

@XvectorMethod{append}

@subsubheading Predicates

@XvectorMethod{null?}
@XvectorMethodMap{every}
@XvectorMethodMap{any}

@subsubheading Comparison

@XvectorMethodCompare{=}
@XvectorMethodCompare{<>}
@XvectorMethodCompare{<}
@XvectorMethodCompare{<=}
@XvectorMethodCompare{>}
@XvectorMethodCompare{>=}

@subsubheading Mapping

@XvectorMethodMap{map/with-index}
@XvectorMethodMap{map!}
@XvectorMethodMap{map!/with-index}
@XvectorMethodMap{map*}
@XvectorMethodMap{map*/with-index}
@XvectorMethodMap{map*!}
@XvectorMethodMap{map*!/with-index}
@XvectorMethodMap{for-each*}
@XvectorMethodMap{for-each*/with-index}
@XvectorMethodMap{subvector-map}
@XvectorMethodMap{subvector-map/with-index}
@XvectorMethodMap{subvector-map!}
@XvectorMethodMap{subvector-map!/with-index}
@XvectorMethodMap{subvector-for-each}
@XvectorMethodMap{subvector-for-each/with-index}
@XvectorMethodMap{subvector-for-each-index}
@XvectorMethodMap{map/stx}
@XvectorMethodMap{map*/stx}
@XvectorMethodMap{map!/stx}
@XvectorMethodMap{map*!/stx}
@XvectorMethodMap{for-each/stx}
@XvectorMethodMap{for-each*/stx}

@subsubheading Folding

@XvectorMethodFold{fold-left}
@XvectorMethodFold{fold-right}
@XvectorMethodFold{fold-left*}
@XvectorMethodFold{fold-right*}
@XvectorMethodFold{fold-left/stx}
@XvectorMethodFold{fold-right/stx}
@XvectorMethodFold{fold-left*/stx}
@XvectorMethodFold{fold-right*/stx}
@XvectorMethodFold{fold-left/with-index}
@XvectorMethodFold{fold-right/with-index}
@XvectorMethodFold{fold-left*/with-index}
@XvectorMethodFold{fold-right*/with-index}
@XvectorMethodFold{subvector-fold-left}
@XvectorMethodFold{subvector-fold-right}
@XvectorMethodFold{and-fold-left}
@XvectorMethodFold{and-fold-right}
@XvectorMethodFold{and-fold-left*}
@XvectorMethodFold{and-fold-right*}
@XvectorMethodFold{and-fold-left/stx}
@XvectorMethodFold{and-fold-right/stx}
@XvectorMethodFold{and-fold-left*/stx}
@XvectorMethodFold{and-fold-right*/stx}
@XvectorMethodFold{fold-left/pred}

@subsubheading Selecting

@XvectorMethod{subvector}
@XvectorMethod{subvector*}
@XvectorMethod{copy}
@XvectorMethod{reverse-copy}
@XvectorMethod{copy!}
@XvectorMethod{reverse-copy!}
@XvectorMethod{take}
@XvectorMethod{take-right}
@XvectorMethod{drop}
@XvectorMethod{drop-right}

@subsubheading Padding and trimming

@XvectorMethod{trim}
@XvectorMethod{trim-right}
@XvectorMethod{trim-both}
@XvectorMethod{pad}
@XvectorMethod{pad-right}

@subsubheading Prefix and suffix

@XvectorMethod{prefix-length}
@XvectorMethod{suffix-length}
@XvectorMethod{prefix?}
@XvectorMethod{suffix?}

@subsubheading Searching

@XvectorMethod{index}
@XvectorMethod{index-right}
@XvectorMethod{skip}
@XvectorMethod{skip-right}
@XvectorMethod{count}
@XvectorMethod{contains}
@XvectorMethod{binary-search}

@subsubheading Filtering

@XvectorMethod{filter}
@XvectorMethod{delete}

@subsubheading Lists

@XvectorMethod{list*}
@XvectorMethod{reverse-vector->list}

@subsubheading Replicating

@XvectorMethod{xsubvector}
@XvectorMethod{xcopy!}

@subsubheading Mutating

@XvectorMethod{fill*!}
@XvectorMethod{swap!}

@subsubheading Reverse and replace

@XvectorMethod{reverse}
@XvectorMethod{reverse!}
@XvectorMethod{replace}

@c end of file
