Subject: [announce] Vicare Scheme revision 0.2d6

                             Vicare Scheme
                             =============


Vicare Scheme is an R6RS compliant fork of Ikarus Scheme, aiming to be a
native compiler for R6 Scheme producing single threaded programs running
on  Intel x86 32-bit  processors, with  experimental support  for 64-bit
machines; it  implements a foreign-functions interface  based on Libffi.
"Vicare" is pronounced the etruscan way.

  The latest  version of this package  can be downloaded  from Github or
Google Code:

	<http://code.google.com/p/vicare-scheme/downloads/list>
            <http://github.com/marcomaggi/vicare/downloads>

the home page of the Vicare project is at:

               <http://marcomaggi.github.com/vicare.html>

development takes place at:

                 <http://github.com/marcomaggi/vicare/>

and as backup at:

		     <http://gitorious.org/vicare>

this project has a mailing list:

	     <http://groups.google.com/group/vicare-users>

  It  is suggested to  use Vicare  Scheme along  with Nausicaa,  a large
collection of R6 Scheme libraries:

	      <http://marcomaggi.github.com/nausicaa.html>


Notes for revision 0.2d6
------------------------


Notes for revision 0.2d5
------------------------

* Added users and groups, process control, time related functions to the
  POSIX API.

* Some functions where added to (vicare glibc).

* Better  use of  GNU  Autotools and  better  tracking of  files in  the
  repository.

* The "main()" function now calls:

     setlocale(LC_ALL, "")

* The FFI library is now  (vicare ffi).  FFI code and documentation have
  been reviewed.  They need more testing.

* A toy library to build and  load shared libraries at runtime using GCC
  has been added, (vicare gcc).


Notes for revision 0.2d4
------------------------

* The POSIX API  is exported by the (vicare posix)  library, and also by
  (ikarus) and (vicare).

* The GNU C Library API is exported by the (vicare glibc) library.

* The Linux API is exported by the (vicare linux) library.

* Socket functions have been added to the POSIX API.

* Some documentation on handling Scheme  objects at the C language level
  has been written.


Notes for revision 0.2d3
------------------------

* The configuration process is now really long (sorry).

* Restructured most of the POSIX API, in a way non-backwards compatible.
  Still no sockets API available in this release.

* Added the functions:

    make-binary-file-descriptor-input-port
    make-binary-file-descriptor-input-port*
    make-binary-file-descriptor-output-port
    make-binary-file-descriptor-output-port*
    make-binary-file-descriptor-input/output-port
    make-binary-file-descriptor-input/output-port*
    make-textual-file-descriptor-input-port
    make-textual-file-descriptor-input-port*
    make-textual-file-descriptor-output-port
    make-textual-file-descriptor-output-port*
    make-textual-file-descriptor-input/output-port
    make-textual-file-descriptor-input/output-port*
    port-fd

* Added  experimental boot image  for 64-bit  platforms, generated  on a
  32-bit machine.  Hope it works.


Notes for revision 0.2d2
------------------------

* Tarballs extracted from GitHub's  "extract tagged revision" feature do
  not work because of missing files,  so this project is back on relying
  only  on  full repository  checkouts  and  release  tarballs from  the
  download area.

* The  default   list  of  library   file  extensions  now   holds  just
  ".vicare.sls" and ".sls"; the new option --more-file-extensions allows
  to restore  the old  behaviour of searching  for many  file extensions
  plus the "main" file trick.

* Some documentation has been written; other reviewed.

* More code reviewed with support for optional arguments validation.

* Updated  functions to  properly rely  on I/O  port's own  buffer mode;
  DISPLAY, WRITE, NEWLINE do not force a flush anymore.

* Added  SET-PORT-BUFFER-MODE! to  reconfigure the  mode of  an existing
  port.


Notes for revision 0.2d1
------------------------

* It  appears that  Ikarus' mailing  list is  working no  more,  so this
  project  now   has  its  own   mailing  list  for   announcements  and
  discussions:

	     <http://groups.google.com/group/vicare-users>

* Added library (vicare) exporting the same bindings of (ikarus).

* Review of bytevector functions.

* Introduced  the configuration  option "--disable-arguments-validation"
  to exclude  at expansion-time code validating  arguments to functions.
  At present only a few modules support this feature.

* Review  of command line  options and  execution modes.   Added options
  "--print-assembly"  and "--print-optimizer",  at present  neither very
  useful, nor human-friendly.


### end of file
# Local Variables:
# mode: text
# fill-column: 72
# paragraph-start: "*"
# End:
