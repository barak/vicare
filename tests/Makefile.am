## Process this file with automake to produce Makefile.in

VICARE_SCHEME_CORE_TESTS	= \
	test-r6rs-arithmetic-bitwise.sps				\
	test-r6rs-arithmetic-fixnums.sps				\
	test-r6rs-arithmetic-flonums.sps				\
	test-r6rs-base.sps						\
	test-r6rs-bytevectors.sps					\
	test-r6rs-conditions.sps					\
	test-r6rs-contrib.sps						\
	test-r6rs-control.sps						\
	test-r6rs-enums.sps						\
	test-r6rs-eval.sps						\
	test-r6rs-exceptions.sps					\
	test-r6rs-hashtables.sps					\
	test-r6rs-io-ports.sps						\
	test-r6rs-io-simple.sps						\
	test-r6rs-lists.sps						\
	test-r6rs-mutable-pairs.sps					\
	test-r6rs-mutable-strings.sps					\
	test-r6rs-programs.sps						\
	test-r6rs-r5rs.sps						\
	test-r6rs-reader.sps						\
	test-r6rs-records-procedural.sps				\
	test-r6rs-records-syntactic.sps					\
	test-r6rs-sorting.sps						\
	test-r6rs-syntax-case.sps					\
	test-r6rs-unicode.sps						\
	\
	test-ikarus-bignum-to-flonum.sps				\
	test-ikarus-bitwise.sps						\
	test-ikarus-bytevectors.sps					\
	test-ikarus-case-folding.sps					\
	test-ikarus-div-and-mod.sps					\
	test-ikarus-enums.sps						\
	test-ikarus-fasl.sps						\
	test-ikarus-fixnums.sps						\
	test-ikarus-fldiv-and-mod.sps					\
	test-ikarus-guardians.sps					\
	test-ikarus-hashtables.sps					\
	test-ikarus-lists.sps						\
	test-ikarus-normalization.sps					\
	test-ikarus-numerics.sps					\
	test-ikarus-r6rs-records-procedural.sps				\
	test-ikarus-reader.sps						\
	test-ikarus-set-position.sps					\
	test-ikarus-sorting.sps						\
	test-ikarus-strings.sps						\
	test-ikarus-symbol-table.sps					\
	test-ikarus-unicode.sps						\
	\
	test-vicare-bignums.sps						\
	test-vicare-bytevectors.sps					\
	test-vicare-builtin-posix.sps					\
	test-vicare-chars.sps						\
	test-vicare-collect.sps						\
	test-vicare-compensations.sps					\
	test-vicare-conditions.sps					\
	test-vicare-enumerations.sps					\
	test-vicare-environment-inquiry.sps				\
	test-vicare-equality.sps					\
	test-vicare-errno.sps						\
	test-vicare-expander.sps					\
	test-vicare-debugging.sps					\
	test-vicare-fasl.sps						\
	test-vicare-fixnums.sps						\
	test-vicare-flonum-base.sps					\
	test-vicare-flonum-formatter.sps				\
	test-vicare-flonum-parser.sps					\
	test-vicare-io.sps						\
	test-vicare-letrec-syntax.sps					\
	test-vicare-library-utils.sps					\
	test-vicare-lists.sps						\
	test-vicare-log.sps						\
	test-vicare-numerics-generic.sps				\
	test-vicare-numerics-neg.sps					\
	test-vicare-numerics-inv.sps					\
	test-vicare-numerics-add.sps					\
	test-vicare-numerics-sub.sps					\
	test-vicare-numerics-mul.sps					\
	test-vicare-numerics-div.sps					\
	test-vicare-numerics-gcd.sps					\
	test-vicare-numerics-lcm.sps					\
	test-vicare-numerics-quotient.sps				\
	test-vicare-numerics-remainder.sps				\
	test-vicare-numerics-modulo.sps					\
	test-vicare-numerics-square.sps					\
	test-vicare-numerics-cube.sps					\
	test-vicare-numerics-sign.sps					\
	test-vicare-numerics-expt-fixnums.sps				\
	test-vicare-numerics-expt-bignums.sps				\
	test-vicare-numerics-expt-flonums.sps				\
	test-vicare-numerics-expt-ratnums.sps				\
	test-vicare-numerics-expt-cflonums.sps				\
	test-vicare-numerics-expt-compnums.sps				\
	test-vicare-numerics-max.sps					\
	test-vicare-numerics-min.sps					\
	test-vicare-numerics-abs.sps					\
	test-vicare-numerics-log.sps					\
	test-vicare-numerics-exponential.sps				\
	test-vicare-numerics-trigon-sin.sps				\
	test-vicare-numerics-trigon-cos.sps				\
	test-vicare-numerics-trigon-tan.sps				\
	test-vicare-numerics-trigon-asin.sps				\
	test-vicare-numerics-trigon-acos.sps				\
	test-vicare-numerics-trigon-atan.sps				\
	test-vicare-numerics-hyper-sinh.sps				\
	test-vicare-numerics-hyper-cosh.sps				\
	test-vicare-numerics-hyper-tanh.sps				\
	test-vicare-numerics-hyper-asinh.sps				\
	test-vicare-numerics-hyper-acosh.sps				\
	test-vicare-numerics-hyper-atanh.sps				\
	test-vicare-numerics-complex-numbers.sps			\
	test-vicare-numerics-sqrt.sps					\
	test-vicare-numerics-bitwise.sps				\
	test-vicare-parameters.sps					\
	test-vicare-parser-logic.sps					\
	test-vicare-pointers.sps					\
	test-vicare-promises.sps					\
	test-vicare-time.sps						\
	test-vicare-ratnums.sps						\
	test-vicare-reader.sps						\
	test-vicare-records-procedural.sps				\
	test-vicare-records-syntactic.sps				\
	test-vicare-round.sps						\
	test-vicare-string-to-number.sps				\
	test-vicare-strings.sps						\
	test-vicare-structs.sps						\
	test-vicare-symbols.sps						\
	test-vicare-syntactic-extensions.sps				\
	test-vicare-syntax-utilities.sps				\
	test-vicare-system.sps						\
	test-vicare-vectors.sps						\
	\
	test-issue-001-equal-hash.sps					\
	test-issue-003.sps						\
	test-issue-006-fxreverse-bit-field.sps				\
	test-issue-007.sps						\
	test-issue-008.sps						\
	test-issue-009.sps						\
	test-issue-010.sps						\
	test-issue-012.sps						\
	test-issue-013.sps						\
	test-issue-015.sps						\
	test-issue-017.sps						\
	test-issue-020.sps						\
	test-issue-021.sps						\
	test-issue-022.sps						\
	test-issue-023.sps						\
	test-issue-024.sps						\
	test-issue-025-sign-in-exact-rationals.sps			\
	\
	test-vicare-unsafe-operations.sps				\
	\
	test-vicare-platform-utils.sps					\
	test-vicare-platform-words.sps					\
	\
	test-vicare-arguments-validation.sps				\
	test-vicare-arguments-general-c-buffers.sps			\
	\
	test-vicare-language-extensions.sps				\
	test-vicare-language-extensions-amb.sps				\
	test-vicare-language-extensions-ascii-chars.sps			\
	test-vicare-language-extensions-c-enumerations.sps		\
	test-vicare-language-extensions-callables.sps			\
	test-vicare-language-extensions-comparisons.sps			\
	test-vicare-language-extensions-cond-expand.sps			\
	test-vicare-language-extensions-coroutines.sps			\
	test-vicare-language-extensions-custom-ports.sps		\
	test-vicare-language-extensions-hooks.sps			\
	test-vicare-language-extensions-identifier-alists.sps		\
	test-vicare-language-extensions-identifier-properties.sps	\
	test-vicare-language-extensions-identifier-substitutions.sps	\
	test-vicare-language-extensions-infix.sps			\
	test-vicare-language-extensions-keywords.sps			\
	test-vicare-language-extensions-loops.sps			\
	test-vicare-language-extensions-makers.sps			\
	test-vicare-language-extensions-namespaces.sps			\
	test-vicare-language-extensions-sentinels.sps			\
	test-vicare-language-extensions-simple-match.sps		\
	test-vicare-language-extensions-streams.sps			\
	test-vicare-language-extensions-variables.sps			\
	\
	test-vicare-containers-arrays.sps				\
	test-vicare-containers-bytevector-compounds.sps			\
	test-vicare-containers-bytevectors-s8-high.sps			\
	test-vicare-containers-bytevectors-s8-low.sps			\
	test-vicare-containers-bytevectors-u8-high.sps			\
	test-vicare-containers-bytevectors-u8-low.sps			\
	test-vicare-containers-char-sets.sps				\
	test-vicare-containers-kmp.sps					\
	test-vicare-containers-levenshtein.sps				\
	test-vicare-containers-lists-fun.sps				\
	test-vicare-containers-lists-low.sps				\
	test-vicare-containers-lists-stx.sps				\
	test-vicare-containers-object-properties.sps			\
	test-vicare-containers-one-dimension-cc.sps			\
	test-vicare-containers-one-dimension-co.sps			\
	test-vicare-containers-queues.sps				\
	test-vicare-containers-stacks.sps				\
	test-vicare-containers-strings-high.sps				\
	test-vicare-containers-strings-low.sps				\
	test-vicare-containers-strings-rabin-karp.sps			\
	test-vicare-containers-vectors-high.sps				\
	test-vicare-containers-weak-hashtables.sps			\
	\
	test-vicare-crypto-randomisations.sps				\
	\
	test-vicare-net-channels-binary.sps				\
	test-vicare-net-channels-textual.sps				\
	\
	test-irregex.sps						\
	test-pregexp.sps						\
	test-vicare-getopts.sps						\
	test-formations-round.sps					\
	test-formations-lib.sps						\
	\
	test-vicare-parser-tools-silex-file.sps				\
	test-vicare-parser-tools-silex-misc.sps				\
	test-vicare-parser-tools-silex-online.sps

VICARE_SCHEME_LONG_TESTS	= \
	long-test-r6rs-run.sps						\
	long-test-r6rs-run-via-eval.sps					\
	long-test-ikarus-bignums.sps					\
	long-test-ikarus-io.sps						\
	long-test-ikarus-parse-flonums.sps				\
	long-test-ikarus-string-to-number.sps

VICARE_SCHEME_SRFI_TESTS	= \
	test-srfi-0-cond-expand.sps					\
	test-srfi-1-lists.sps						\
	test-srfi-2-and-let-star.sps					\
	test-srfi-6-basic-string-ports.sps				\
	test-srfi-8-receive.sps						\
	test-srfi-9-records.sps						\
	test-srfi-11-let-values.sps					\
	test-srfi-13-strings.sps					\
	test-srfi-14-char-sets.sps					\
	test-srfi-19-time.sps						\
	test-srfi-26-cut.sps						\
	test-srfi-27-random-bits.sps					\
	test-srfi-28-basic-format.sps					\
	test-srfi-31-rec.sps						\
	test-srfi-37-args-fold.sps					\
	test-srfi-39-parameters.sps					\
	test-srfi-41-streams.sps					\
	test-srfi-42-eager-comprehensions.sps				\
	test-srfi-43-vectors.sps					\
	test-srfi-45-lazy.sps						\
	test-srfi-48-intermediate-format-strings.sps			\
	test-srfi-61-general-cond.sps					\
	test-srfi-64-testing.sps					\
	test-srfi-67-compare-procedures.sps				\
	test-srfi-69-basic-hash-tables.sps				\
	test-srfi-78-lightweight-testing.sps				\
	test-srfi-98-os-environment-variables.sps			\
	test-srfi-101-functional-pairs.sps				\
	test-srfi-111-boxes.sps						\
	test-srfi-112-environment-inquiry.sps

VICARE_SCHEME_SRFI_POSIX_TESTS	= \
	test-srfi-106-socket.sps

VICARE_SCHEME_NAUSICAA_TESTS	= \
	test-nausicaa-tags-helpers.sps					\
	test-nausicaa-tags-core-classes.sps				\
	test-nausicaa-tags-core-labels.sps				\
	test-nausicaa-tags-docs.sps					\
	test-nausicaa-oopp-generics.sps					\
	test-nausicaa-oopp-binding-constructs.sps			\
	test-nausicaa-oopp-builtin-labels.sps				\
	test-nausicaa-oopp-core.sps					\
	test-nausicaa-oopp-labels-and-interfaces.sps			\
	test-nausicaa-oopp-label-core.sps				\
	test-nausicaa-oopp-label-shadowing.sps				\
	test-nausicaa-oopp-mixins.sps					\
	test-nausicaa-oopp-setter-and-getter.sps			\
	test-nausicaa-oopp-unsafe-field-selectors.sps			\
	test-nausicaa-multimethods-ordinary.sps				\
	test-nausicaa-multimethods-starred.sps				\
	test-nausicaa-conditions.sps					\
	\
	test-nausicaa-containers-lists.sps				\
	test-nausicaa-containers-vectors.sps				\
	test-nausicaa-containers-strings.sps				\
	test-nausicaa-containers-arrays.sps				\
	test-nausicaa-containers-stacks.sps				\
	test-nausicaa-containers-queues.sps				\
	test-nausicaa-containers-bitvectors.sps				\
	test-nausicaa-containers-iterators.sps				\
	\
	test-nausicaa-parser-tools-lexical-token.sps			\
	test-nausicaa-parser-tools-source-location.sps			\
	test-nausicaa-parser-tools-lalr-lr.sps				\
	test-nausicaa-parser-tools-lalr-glr.sps				\
	test-nausicaa-parser-tools-lalr-calc.sps			\
	\
	test-issue-058-lalr-unary-prec.sps

VICARE_SCHEME_FFI_TESTS	= \
	test-vicare-ffi-core.sps					\
	test-vicare-ffi-foreign-pointer-wrapper.sps

VICARE_SCHEME_POSIX_TESTS	= \
	test-vicare-posix-basic.sps					\
	test-vicare-posix-non-blocking.sps				\
	test-vicare-posix-close-on-exec.sps				\
	test-vicare-posix-sockets.sps					\
	test-vicare-posix-mmap.sps					\
	test-vicare-posix-bub.sps					\
	test-vicare-posix-time.sps					\
	test-vicare-posix-timers.sps					\
	test-vicare-posix-message-queue.sps				\
	test-vicare-posix-shared-memory.sps				\
	test-vicare-posix-semaphores.sps				\
	test-vicare-posix-sigwait.sps					\
	\
	test-vicare-posix-processes-shared-memory.sps			\
	test-vicare-posix-sel.sps					\
	test-vicare-posix-pid-files.sps					\
	test-vicare-posix-lock-pid-files.sps				\
	test-vicare-posix-log-files.sps					\
	\
	test-vicare-posix-net-channels-binary.sps			\
	test-vicare-posix-net-channels-textual.sps

VICARE_SCHEME_GLIBC_TESTS	= test-vicare-glibc.sps

VICARE_SCHEME_ICONV_TESTS	= test-vicare-iconv.sps

VICARE_SCHEME_LINUX_TESTS	= test-vicare-linux.sps

VICARE_SCHEME_CRE2_TESTS	= foreign-test-vicare-cre2.sps

## --------------------------------------------------------------------
## select tests for "make check"

TESTS		= $(VICARE_SCHEME_CORE_TESTS)
XFAIL_TESTS	= test-issue-058-lalr-unary-prec.sps

if WANT_SRFI
TESTS		+= $(VICARE_SCHEME_SRFI_TESTS)
if WANT_POSIX
TESTS		+= $(VICARE_SCHEME_SRFI_POSIX_TESTS)
endif
endif

if WANT_NAUSICAA
TESTS		+= $(VICARE_SCHEME_NAUSICAA_TESTS)
endif

if WANT_LIBFFI
TESTS		+= $(VICARE_SCHEME_FFI_TESTS)
endif

if WANT_POSIX
TESTS		+= $(VICARE_SCHEME_POSIX_TESTS)
endif

if WANT_GLIBC
TESTS		+= $(VICARE_SCHEME_GLIBC_TESTS)
endif

if WANT_LIBICONV
TESTS		+= $(VICARE_SCHEME_ICONV_TESTS)
endif

if WANT_LINUX
TESTS		+= $(VICARE_SCHEME_LINUX_TESTS)
endif

if WANT_CRE2
TESTS		+= $(VICARE_SCHEME_CRE2_TESTS)
endif

## --------------------------------------------------------------------

EXTRA_DIST	= \
	ikarus-test-framework.sls			\
	lists.sls					\
	lists/low.sls					\
	lists/stx.sls					\
	numerics/helpers.sls				\
	libtest/calc-code-lexer.sls			\
	libtest/calc-parser-helper.sls			\
	libtest/calc-parser-lexer.sls			\
	libtest/calc-parser.sls				\
	libtest/calc-portable-lexer.sls			\
	libtest/calc-tree-lexer.sls			\
	libtest/classes-lib.sls				\
	libtest/makers-lib.sls				\
	libtest/records-lib.sls				\
	libtest/silex-test.sls				\
	make-silex-calc.sps				\
	make-lalr-calc.sps				\
	calc.l						\
	TEST-SOURCE-FILE.txt				\
	rn100						\
	\
	r6rs/README.txt					\
	r6rs/arithmetic					\
	r6rs/arithmetic/bitwise.sls			\
	r6rs/arithmetic/fixnums.sls			\
	r6rs/arithmetic/flonums.sls			\
	r6rs/base.sls					\
	r6rs/bytevectors.sls				\
	r6rs/conditions.sls				\
	r6rs/contrib					\
	r6rs/contrib.sls				\
	r6rs/contrib/helper1.sls			\
	r6rs/control.sls				\
	r6rs/enums.sls					\
	r6rs/eval.sls					\
	r6rs/exceptions.sls				\
	r6rs/hashtables.sls				\
	r6rs/io						\
	r6rs/io/ports.sls				\
	r6rs/io/simple.sls				\
	r6rs/lists.sls					\
	r6rs/mutable-pairs.sls				\
	r6rs/mutable-strings.sls			\
	r6rs/programs.sls				\
	r6rs/r5rs.sls					\
	r6rs/reader.sls					\
	r6rs/records					\
	r6rs/records/procedural.sls			\
	r6rs/records/syntactic.sls			\
	r6rs/sorting.sls				\
	r6rs/syntax-case.sls				\
	r6rs/test.sls					\
	r6rs/unicode.sls				\
	\
	exec-modes-helpers/r6rs-forms			\
	exec-modes-helpers/r6rs-program.sps		\
	test-exec-modes.sh				\
	\
	demo-vicare-gcc.sps				\
	demo-vicare-readline.sps			\
	demo-vicare-timerfd.sps				\
	demo-issue-35.sps				\
	demo-tcp-connect.sps				\
	demo-srfi-106.sps				\
	\
	$(VICARE_SCHEME_CORE_TESTS)			\
	$(VICARE_SCHEME_LONG_TESTS)			\
	$(VICARE_SCHEME_SRFI_TESTS)			\
	$(VICARE_SCHEME_SRFI_POSIX_TESTS)		\
	$(VICARE_SCHEME_NAUSICAA_TESTS)			\
	$(VICARE_SCHEME_FFI_TESTS)			\
	$(VICARE_SCHEME_POSIX_TESTS)			\
	$(VICARE_SCHEME_GLIBC_TESTS)			\
	$(VICARE_SCHEME_ICONV_TESTS)			\
	$(VICARE_SCHEME_LINUX_TESTS)			\
	$(VICARE_SCHEME_CRE2_TESTS)

#page
#### customised test rules

testdir				= $(srcdir)
VICARE_SELECTED_TESTS		= $(testdir)/test-*$(file)*.sps
VICARE_SELECTED_LONG_TESTS	= $(testdir)/long-test-*$(file)*.sps
VICARE_SELECTED_FOREIGN_TESTS	= $(testdir)/foreign-test-*$(file)*.sps
VICARE_SELECTED_DEMOS		= $(testdir)/demo-*$(file)*.sps

VICARE_LIBDIR		= $(libdir)/scheme/r6rs

VICARE_FASL_DIRECTORY	= $(builddir)/../lib/fasl
VICARE_TEST_SEARCH_PATH	= $(srcdir):$(srcdir)/../lib:$(builddir)/../lib:$(srcdir)/../scheme
VICARE_TEST_FASL_PATH	= $(VICARE_FASL_DIRECTORY):$(VICARE_FASL_PATH)

# Enable timing of test files  execution.  We cannot include this in the
# separator  because  it needs  to  be  placed  between the  environment
# variables and the actual command line.
if WANT_TIME_TESTS
VICARE_TIME_TESTS	= $(TIME_PROGRAM) -p
endif

# The variable "VFLAGS" is for the user  to be set on the command line
# of "make" or "configure", for example:
#
#   make VFLAGS="-g -O2 --print-loaded-libraries"
#
VFLAGS		= @VFLAGS@

VICARE		= $(builddir)/../src/vicare
VICARE_BOOT	= $(builddir)/../scheme/vicare.boot
VICARE_FLAGS	= -b $(VICARE_BOOT) $(VFLAGS) --r6rs-script
VICARE_ENV	= \
	VICARE_LIBRARY_PATH=$(VICARE_TEST_SEARCH_PATH); export VICARE_LIBRARY_PATH;	\
	VICARE_FASL_DIRECTORY=$(VICARE_FASL_DIRECTORY); export VICARE_FASL_DIRECTORY;	\
	CHECK_TEST_NAME=$(name); export CHECK_TEST_NAME;				\
	VICARE_SRC_DIR=$(srcdir); export VICARE_SRC_DIR;				\
	VICARE_BUILDDIR=$(builddir); export VICARE_BUILDDIR;				\
	SILEX_PATH=$(srcdir)/../lib/vicare/parser-tools/silex/macros; export SILEX_PATH;\
	LD_LIBRARY_PATH=$(builddir)/../src/.libs; export LD_LIBRARY_PATH;
VICARE_RUN	= $(VICARE_ENV) $(VICARE_TIME_TESTS) $(GDB) $(VICARE) $(VICARE_FLAGS)

.PHONY: test tests test-r6rs long-test long-tests
.PHONY: demo demos foreign-test foreign-tests

test tests:
	@echo
	@for f in $(VICARE_SELECTED_TESTS); do $(VICARE_RUN) $$f; done
	@echo

long-test long-tests:
	@echo
	@for f in $(VICARE_SELECTED_LONG_TESTS); do $(VICARE_RUN) $$f; done
	@echo

foreign-test foreign-tests:
	@echo
	@for f in $(VICARE_SELECTED_FOREIGN_TESTS); do $(VICARE_RUN) $$f; done
	@echo

demo demos:
	@echo
	@for f in $(VICARE_SELECTED_DEMOS); do $(VICARE_RUN) $$f; done
	@echo

## --------------------------------------------------------------------

## SILex test files

.PHONY: silex-test

silex-test:
	@for f in $(testdir)/make-silex-*.sps; do export testdir=$(testdir); $(VICARE_RUN) $$f; done

## special rules: LALR test parsers building

.PHONY: lalr-test

lalr-test:
	@for f in $(testdir)/make-lalr-*.sps; do export testdir=$(testdir); $(VICARE_RUN) $$f; done

#page
#### running vicare from the build directory

VIE			= $(srcdir)/../scripts/vie

# The variable "user_flags"  is for the user to be  set on the command
# line of "make".
VICARE_TEST_RUN_FLAGS	= -b $(VICARE_BOOT) $(VFLAGS) $(user_flags)
VICARE_TEST_RUN_ENV	= \
	VICARE_LIBRARY_PATH=$(VICARE_TEST_SEARCH_PATH); export VICARE_LIBRARY_PATH;	\
	VICARE_SRC_DIR=$(srcdir); export VICARE_SRC_DIR;				\
	VICARE_BUILDDIR=$(builddir); export VICARE_BUILDDIR;				\
	SILEX_PATH=$(srcdir)/../lib/vicare/parser-tools/silex; export SILEX_PATH;
VICARE_TEST_RUN	= $(VICARE_TEST_RUN_ENV) $(VICARE) $(VICARE_TEST_RUN_FLAGS)
VICARE_TEST_VIE	= $(VICARE_TEST_RUN_ENV) $(VIE) $(VICARE) --raw-repl $(VICARE_TEST_RUN_FLAGS)


.PHONY: test-run test-vie test-exec-modes

test-run:
	$(VICARE_TEST_RUN)

test-vie:
	$(VICARE_TEST_VIE)

test-exec-modes:
	$(VICARE_TEST_RUN_ENV) $(srcdir)/test-exec-modes.sh $(VICARE) $(VICARE_BOOT) $(srcdir)

#page
#### interface to "make check"

# Read "Parallel Test Harness" in the documentation of GNU Automake to
# understand how to use this interface for "make check".
#
# We must make sure that this ends with a semicolon!!!
AM_TESTS_ENVIRONMENT	= VICARE_CHECK_QUIET=yes; export VICARE_CHECK_QUIET; $(VICARE_ENV)
TEST_EXTENSIONS		= .sps
SPS_LOG_COMPILER	= $(VICARE)
AM_SPS_LOG_FLAGS	= -b $(VICARE_BOOT) $(user_flags)

#page
#### interface to "make instcheck"

VICARE_INSTCHECK_LIBRARY_PATH = $(DESTDIR)$(VICARE_LIBDIR):$(VICARE_LIBRARY_PATH):$(srcdir):$(srcdir)/../scheme

VICARE_INSTCHECK_FLAGS	= --print-loaded-libraries $(user_flags)
VICARE_INSTCHECK_ENV	= \
	VICARE_LIBRARY_PATH=$(VICARE_INSTCHECK_LIBRARY_PATH);	export VICARE_LIBRARY_PATH;	\
	LD_LIBRARY_PATH=$(DESTDIR)$(libdir);			export LD_LIBRARY_PATH;		\
	VICARE_CHECK_QUIET=no;					export VICARE_CHECK_QUIET;	\
	SILEX_PATH=$(srcdir)/../lib/vicare/parser-tools/silex;	export SILEX_PATH;
VICARE_INSTCHECK_RUN	= \
	$(VICARE_INSTCHECK_ENV) $(DESTDIR)$(bindir)/vicare $(VICARE_INSTCHECK_FLAGS)

installcheck-local:
	@for f in $(TESTS); do $(VICARE_INSTCHECK_RUN) $(srcdir)/$$f; done

### end of file
